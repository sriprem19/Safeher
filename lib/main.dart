// lib/main.dart
import 'dart:async'; // for runZonedGuarded

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';
import 'supabase_config.dart';
import 'safe_her_welcome_screen.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  try {
    // ‚úÖ Important on web: initialize with platform options generated by flutterfire
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
    debugPrint('‚úÖ Firebase initialized successfully');

    // Initialize Supabase for OTP authentication
    try {
      await SupabaseConfig.initialize();
      debugPrint('‚úÖ Supabase initialized successfully');
    } catch (supabaseError) {
      debugPrint('‚ö†Ô∏è Supabase initialization failed: $supabaseError');
      // Continue without Supabase - app can still show UI
    }
    
  } catch (error, stack) {
    debugPrint('‚ùå Initialization error: $error\n$stack');
    // Continue anyway - app can still work with basic functionality
  }

  // Log uncaught framework errors (prevents silent white screens)
  FlutterError.onError = (FlutterErrorDetails details) {
    FlutterError.dumpErrorToConsole(details);
  };

  runApp(const SafeHerApp());
}

class SafeHerApp extends StatelessWidget {
  const SafeHerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'SafeHer',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: const AuthWrapper(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class AuthWrapper extends StatelessWidget {
  const AuthWrapper({super.key});

  @override
  Widget build(BuildContext context) {
    debugPrint('üîÑ AuthWrapper building...');
    // Directly show the SafeHerWelcomeScreen
    return const SafeHerWelcomeScreen();
  }
}

